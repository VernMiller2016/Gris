@using GRis.ViewModels.PaySource
@using X.PagedList.Mvc;
@using X.PagedList;
@model IEnumerable<GRis.ViewModels.PaySource.PaySourceDetailsViewModel>

@{
    ViewBag.Title = "Index";
    var filterViewModel = ViewBag.FilterViewModel as PaysourceFilterViewModel;
}

<h2>Index</h2>

<div>
    @using (Html.BeginForm("Index", "PaySources", FormMethod.Get))
    {
        <div class="form-horizontal">
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.PaysourceName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.PaysourceName, null, "paysourcename", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Filter" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<p>
    @Html.ActionLink("Create New", "Create") | @Html.ActionLink("Upload excel sheet", "Upload")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.VendorId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Programs)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.VendorId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @foreach (var program in item.Programs)
                {
                    <p>@program.Name</p>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
{
    page,
    paysourcename = filterViewModel.PaysourceName
}))