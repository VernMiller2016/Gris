@using GRis.ViewModels.Server
@using X.PagedList;
@using X.PagedList.Mvc;
@model IEnumerable<GRis.ViewModels.Server.ServerDetailsViewModel>

@{
    ViewBag.Title = "Index";
    var filterViewModel = ViewBag.FilterViewModel as ServerFilterViewModel;
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create") | @Html.ActionLink("Upload excel sheet", "Upload")
</p>
<p>
    @using (Html.BeginForm("Index", "Servers", FormMethod.Get))
    {
        <div class="form-horizontal">
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.FirstName, null, "firstname", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.LastName, null, "lastname", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Filter" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.VendorId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GpEmpNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ElementDisplayName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.VendorId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GpEmpNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ElementDisplayName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>
@*Page @(((IPagedList)Model).PageCount < ((IPagedList)Model).PageNumber ? 0 : ((IPagedList)Model).PageNumber) from @((Model as IPagedList).PageCount)*@
@*@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))*@
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
{
    page,
    firstname = filterViewModel.FirstName,
    lastname = filterViewModel.LastName
}))