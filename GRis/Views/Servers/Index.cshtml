@using X.PagedList;
@using X.PagedList.Mvc;
@model IEnumerable<GRis.ViewModels.Server.ServerDetailsViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create") | @Html.ActionLink("Upload excel sheet", "Upload")
</p>
<p>
    @using(Html.BeginForm("Index", "Servers", FormMethod.Get))
    {
     <b> Search Option: </b>@Html.RadioButton("option", "FirstName") <text>First Name</text> @Html.RadioButton("option", "LastName") <text >Last Name </text>
     @Html.TextBox("search") 
    <input type = "submit" name = "submit" value = "Search" / >
    }
    
    
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.VendorId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.VendorId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>
@*Page @(((IPagedList)Model).PageCount < ((IPagedList)Model).PageNumber ? 0 : ((IPagedList)Model).PageNumber) from @((Model as IPagedList).PageCount)*@
@*@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))*@
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
{
    page,
    option = Request.QueryString["option"],
    search = Request.QueryString["search"]
}))
